  version: '3.4'

  networks:
     frontend:
     backend:

  services:
    mssqlserver:
      image: "microsoft/mssql-server-linux:2017-latest"
      ports:
        - "1443:1433"
      container_name: eventserver
      environment:
        ACCEPT_EULA: Y
        SA_PASSWORD: EventApi_123
      networks:
       - backend

    eventapi:
      build:
         context: .\EventApi
         dockerfile: Dockerfile
      image: ${DOCKER_REGISTRY-}eventapi
      environment:
         DatabaseServer: mssqlserver
         DatabaseName: eventsdata
         DatabaseUser: sa
         DatabaseUserPassword: EventApi_123
      container_name: eventapi
      ports:
         - "5031:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver

    webmvc:
      build: 
         context: .\EventbriteMvc
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         IdentityUrl: http://192.168.0.19:5021
         CallBackUrl: http://localhost:5201
         EventUrl: http://eventapi
         CartUrl: http://cart
         OrderUrl: http://order
      container_name: webeventbrite
      ports:
          - "5201:80"
      networks:
          - frontend 
      depends_on:
           - eventapi
           
    tokenserver:
      build: 
         context: .\TokenServiceApi
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         MvcClient: http://localhost:5201  
         BasketApiClient: http://localhost:5051
         OrderApiClient: http://localhost:5601
      container_name: tokenserviceapi
      ports:
         - "5021:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - mssqlserver
    cart:
      image: cartimage
      build: 
         context: .\CartApi
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         IdentityUrl: http://tokenserver
      container_name: cartapi2
      ports:
         - "5051:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - basket.data
         - tokenserver
         - rabbitmq

    order:
      image: events/order
      build: 
         context: .\OrderApi
         dockerfile: Dockerfile    
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         IdentityUrl: http://tokenserver
         SQLSERVER_HOST: mssqlserver
         SA_PASSWORD: EventApi_123
         DATABASE: OrdersDb
      container_name: orderapi2
      ports:
         - "5601:80"
      networks:
         - backend
         - frontend 
      depends_on:
        - mssqlserver
        - tokenserver 
        - rabbitmq

    basket.data:
      image: redis
      ports:
         - "6378:6379"  
      networks:
         - backend 

    rabbitmq:
      image: rabbitmq:3-management
      container_name: rabbitmq
      hostname: myrabbitmq
      ports:
         - "15672:15672"
         - "5672:5672"
         - "5671:5671"
      volumes:
         - ~/rabbitmq:/var/lib/rabbitmq/mnesia   
      networks:
        - backend